#
# Example option.
#
# Options are available when they are in the same directory as
# *.mabu files or on the environment variable MABUPATH or in the
# --path=... option to mabu.
#
# Use a options configuration's extension-less name in a client to find it,
# e.g. "OPTIONS = myoption".
#
# Options directly inside a path entry -- like this file, assuming 'examples'
# is mentioned -- are independent of all other options and may be mixed together
# at will.
#
# But option groups, implicitly defined by placing option files inside
# directories, are mutually exclusive.  See 'option-group/' for an
# example.

# Settings are presented in the likely order of likelihood in real
# configurations.  No settings are required.
#

# Macro definitions for any language are specified here.
#
DEFS = \
    MYFLAG \
    STRING="string" \
    FOO=bar()

# Include paths may be exposed if, for example, the configuration uses
# alternate headers than those otherwise used by the project or components,
# or the configuration also publishes DEFS that require specific includes.
#
INCS = incs \
    . \
    $(MLSDK)\this\example\shows\syntax \
    $(MLSDK)/but/normally/USES/adds/MLSDK/includes...

#
# NOTE: most of these examples include specializations because they are
# nonportable.  (See specialization.mabu for more details.)
#

# flags for C/C++/assembly preprocessing
#
CPPFLAGS = -Dspecial -Ubad_macro

# flags for C or C++ compilers
#
CFLAGS.gcc,clang = -ffast-math

# flags for C++ compilers
#
CXXFLAGS.gcc,clang = -fvisibility-ms-compat

# flags for assemblers
#
ASMFLAGS.gcc,clang = -march=x64+sse+sse2+sse3 -mtune=k8
ASMFLAGS.msvc = -Zp8

# flags for linking: note these go to gcc, not "ld", for
# gcc/clang tools, so use -Wl,... if needed.
#
# (These are likely to cause trouble, being ignorant of the
# actual kind of project being built.)
#
LDFLAGS.gcc,clang = -Wl,-i
LDFLAGS.win = -subsystem:console

# flags for the archiver tool ("ar" or "lib")
#
ARFLAGS.gcc,clang = --target x86_64
ARFLAGS.msvc = -machine:i386



